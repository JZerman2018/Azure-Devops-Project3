name: Azure Pipelines
variables:
  python.version: '3.7.6'
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: Hosted Ubuntu 1804
    steps:
    # Needed for Terraform VM deployment
    # - task: InstallSSHKey@0
    #   displayName: 'Install SSH Key'
    #   inputs:
    #     knownHostsEntry: 'default'
    #     sshPublicKey: '$(ssh_pub_key)'
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/jmeter/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi

- stage: App Deploy
  displayName: App Deploy
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: 'Ubuntu-18.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appName: ''
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  - deployment: VMDeploy
    displayName: 'VM Deploy FakeRestAPI'
    pool:
      vmImage: 'Ubuntu-18.04'
    environment: '$(azureenvironment)'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'VM Deploy FakeRestAPI'
            inputs:
              azureSubscription: '$(azuresubscription)'
              appName: '$(appservice)'
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip





          # - task: Bash@3
          #   displayName: 'Install Dependencies'
          #   inputs:
          #     targetType: 'inline'
          #     script: |
                 #! /bin/bash

          #       # ------------ Install Dependencies ------------
          #       sudo apt-get upgrade -y
          #       sudo apt-get install python3-pip -y
          #       sudo apt-get install unzip -y
          #       sudo apt-get install -y chromium-browser
          #       echo "Chromium Browser Installed"
          #       pip3 install selenium
          #       echo "Selenium Installed"

          #       # ------------ Install Chromedriver -------------
          #       sudo chmod 755 /usr/bin/chromedriver
          #       echo "Changing to home directory"
          #       cd /home/admin
          #       wget https://chromedriver.storage.googleapis.com/87.0.4280.88/chromedriver_linux64.zip
          #       unzip chromedriver_linux64.zip
          #       sudo mv chromedriver /usr/bin
          #       cd /usr/bin
          #       sudo chmod a+x /usr/bin/chromedriver
          #       cd /home/admin
          #       rm -rf chromedriver_linux64.zip
          #       echo "Removed chromedriver_linux64.zip"
          #       chromium-browser -version
          #       chromedriver --version


